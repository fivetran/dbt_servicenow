{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-08-29T17:59:26.699953Z", "invocation_id": "00e2b2c5-ebc9-40fd-8475-ac28dd55b8ee", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.381469Z", "completed_at": "2024-08-29T17:59:23.862360Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:23.865949Z", "completed_at": "2024-08-29T17:59:23.866007Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.519615888595581, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_service_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`cmdb_ci_service`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.350382Z", "completed_at": "2024-08-29T17:59:23.886759Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:23.887285Z", "completed_at": "2024-08-29T17:59:23.887294Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5421938896179199, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`change_request`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.376922Z", "completed_at": "2024-08-29T17:59:24.001765Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.002305Z", "completed_at": "2024-08-29T17:59:24.002312Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.655893087387085, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`change_task`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.378177Z", "completed_at": "2024-08-29T17:59:24.013549Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.014133Z", "completed_at": "2024-08-29T17:59:24.014140Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6670219898223877, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`cmdb_ci`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.871708Z", "completed_at": "2024-08-29T17:59:24.152623Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.153554Z", "completed_at": "2024-08-29T17:59:24.153563Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2842411994934082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__core_company_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`core_company`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:23.889358Z", "completed_at": "2024-08-29T17:59:24.216613Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.217099Z", "completed_at": "2024-08-29T17:59:24.217104Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3289170265197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`incident`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.016008Z", "completed_at": "2024-08-29T17:59:24.265693Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.266249Z", "completed_at": "2024-08-29T17:59:24.266256Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2514219284057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`problem_task`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.004334Z", "completed_at": "2024-08-29T17:59:24.278569Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.278956Z", "completed_at": "2024-08-29T17:59:24.278961Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.275770902633667, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`problem`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.155845Z", "completed_at": "2024-08-29T17:59:24.502572Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.503924Z", "completed_at": "2024-08-29T17:59:24.503938Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.34986090660095215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_choice_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_choice`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.218712Z", "completed_at": "2024-08-29T17:59:24.542721Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.543559Z", "completed_at": "2024-08-29T17:59:24.543569Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3261430263519287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_user`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.267832Z", "completed_at": "2024-08-29T17:59:24.577419Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.578176Z", "completed_at": "2024-08-29T17:59:24.578183Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3116579055786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_grmember_base", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_user_grmember`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.280295Z", "completed_at": "2024-08-29T17:59:24.616897Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.617398Z", "completed_at": "2024-08-29T17:59:24.617404Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.33811211585998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_group_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_user_group`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.507782Z", "completed_at": "2024-08-29T17:59:24.810088Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.811647Z", "completed_at": "2024-08-29T17:59:24.811667Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3065781593322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_has_role_base", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_user_has_role`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.545722Z", "completed_at": "2024-08-29T17:59:24.826673Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.827426Z", "completed_at": "2024-08-29T17:59:24.827436Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2831308841705322, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_role_base", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`sys_user_role`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.580492Z", "completed_at": "2024-08-29T17:59:24.934084Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.934733Z", "completed_at": "2024-08-29T17:59:24.934747Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.35583996772766113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`task`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.619283Z", "completed_at": "2024-08-29T17:59:24.963977Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:24.964547Z", "completed_at": "2024-08-29T17:59:24.964554Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.346447229385376, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `dbt-package-testing`.`servicenow`.`task_sla`", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_sla_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.815955Z", "completed_at": "2024-08-29T17:59:25.237086Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.237958Z", "completed_at": "2024-08-29T17:59:25.237965Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4240241050720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_service", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    attributes\n    \n as \n    \n    attributes\n    \n, \n    \n    \n    business_unit_link\n    \n as \n    \n    business_unit_link\n    \n, \n    \n    \n    business_unit_value\n    \n as \n    \n    business_unit_value\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    cost\n    \n as \n    \n    cost\n    \n, \n    \n    \n    cost_cc\n    \n as \n    \n    cost_cc\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    managed_by_link\n    \n as \n    \n    managed_by_link\n    \n, \n    \n    \n    managed_by_value\n    \n as \n    \n    managed_by_value\n    \n, \n    \n    \n    manufacturer_link\n    \n as \n    \n    manufacturer_link\n    \n, \n    \n    \n    manufacturer_value\n    \n as \n    \n    manufacturer_value\n    \n, \n    \n    \n    model_id_link\n    \n as \n    \n    model_id_link\n    \n, \n    \n    \n    model_id_value\n    \n as \n    \n    model_id_value\n    \n, \n    \n    \n    model_number\n    \n as \n    \n    model_number\n    \n, \n    \n    \n    monitor\n    \n as \n    \n    monitor\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    owned_by_link\n    \n as \n    \n    owned_by_link\n    \n, \n    \n    \n    owned_by_value\n    \n as \n    \n    owned_by_value\n    \n, \n    \n    \n    service_classification\n    \n as \n    \n    service_classification\n    \n, \n    \n    \n    service_level_requirement\n    \n as \n    \n    service_level_requirement\n    \n, \n    \n    \n    service_owner_delegate_link\n    \n as \n    \n    service_owner_delegate_link\n    \n, \n    \n    \n    service_owner_delegate_value\n    \n as \n    \n    service_owner_delegate_value\n    \n, \n    \n    \n    short_description\n    \n as \n    \n    short_description\n    \n, \n    \n    \n    sla_link\n    \n as \n    \n    sla_link\n    \n, \n    \n    \n    sla_value\n    \n as \n    \n    sla_value\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_class_path\n    \n as \n    \n    sys_class_path\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    vendor_link\n    \n as \n    \n    vendor_link\n    \n, \n    \n    \n    vendor_value\n    \n as \n    \n    vendor_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        source_relation,\n        cast(sys_id as string) as cmdb_ci_service_id,\n        cast(sys_created_on as timestamp) as cmdb_ci_service_created_at,\n        cast(sys_updated_on as timestamp) as cmdb_ci_service_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        attributes,\n        business_unit_link,\n        cast(business_unit_value as string) as business_unit_value,\n        category,\n        company_link,\n        cast(company_value as string) as company_value,\n        cost,\n        cost_cc,\n        cost_center_link,\n        cast(cost_center_value as string) as cost_center_value,\n        managed_by_link,\n        cast(managed_by_value as string) as managed_by_value,\n        manufacturer_link,\n        cast(manufacturer_value as string) as manufacturer_value,\n        model_id_link,\n        cast(model_id_value as string) as model_id_value,\n        model_number,\n        monitor,\n        name as cmdb_ci_service_name,\n        owned_by_link,\n        cast(owned_by_value as string) as owned_by_value,\n        service_classification,\n        service_level_requirement,\n        short_description,\n        sla_link,\n        cast(sla_value as string) as sla_value,\n        state as cmdb_ci_service_state,\n        subcategory,\n        sys_class_name,\n        sys_class_path,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as string) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        vendor_link,\n        cast(vendor_value as string) as vendor_value\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.829984Z", "completed_at": "2024-08-29T17:59:25.237354Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.238200Z", "completed_at": "2024-08-29T17:59:25.238203Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.40986013412475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    backout_plan\n    \n as \n    \n    backout_plan\n    \n, \n    \n    \n    cab_date\n    \n as \n    \n    cab_date\n    \n, \n    \n    \n    cab_date_time\n    \n as \n    \n    cab_date_time\n    \n, \n    \n    \n    cab_delegate_link\n    \n as \n    \n    cab_delegate_link\n    \n, \n    \n    \n    cab_delegate_value\n    \n as \n    \n    cab_delegate_value\n    \n, \n    \n    \n    cab_recommendation\n    \n as \n    \n    cab_recommendation\n    \n, \n    \n    \n    cab_required\n    \n as \n    \n    cab_required\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    change_plan\n    \n as \n    \n    change_plan\n    \n, \n    \n    \n    chg_model_link\n    \n as \n    \n    chg_model_link\n    \n, \n    \n    \n    chg_model_value\n    \n as \n    \n    chg_model_value\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    conflict_last_run\n    \n as \n    \n    conflict_last_run\n    \n, \n    \n    \n    conflict_status\n    \n as \n    \n    conflict_status\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    implementation_plan\n    \n as \n    \n    implementation_plan\n    \n, \n    \n    \n    justification\n    \n as \n    \n    justification\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    on_hold_task\n    \n as \n    \n    on_hold_task\n    \n, \n    \n    \n    outside_maintenance_schedule\n    \n as \n    \n    outside_maintenance_schedule\n    \n, \n    \n    \n    phase\n    \n as \n    \n    phase\n    \n, \n    \n    \n    phase_state\n    \n as \n    \n    phase_state\n    \n, \n    \n    \n    production_system\n    \n as \n    \n    production_system\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    requested_by_date\n    \n as \n    \n    requested_by_date\n    \n, \n    \n    \n    requested_by_link\n    \n as \n    \n    requested_by_link\n    \n, \n    \n    \n    requested_by_value\n    \n as \n    \n    requested_by_value\n    \n, \n    \n    \n    review_comments\n    \n as \n    \n    review_comments\n    \n, \n    \n    \n    review_date\n    \n as \n    \n    review_date\n    \n, \n    \n    \n    review_status\n    \n as \n    \n    review_status\n    \n, \n    \n    \n    risk\n    \n as \n    \n    risk\n    \n, \n    \n    \n    risk_impact_analysis\n    \n as \n    \n    risk_impact_analysis\n    \n, \n    \n    \n    scope\n    \n as \n    \n    scope\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    std_change_producer_version_link\n    \n as \n    \n    std_change_producer_version_link\n    \n, \n    \n    \n    std_change_producer_version_value\n    \n as \n    \n    std_change_producer_version_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    test_plan\n    \n as \n    \n    test_plan\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unauthorized\n    \n as \n    \n    unauthorized\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as change_request_id,\n        cast(sys_created_on as timestamp) as change_request_created_at,\n        cast (timestamp_trunc(\n        cast(sys_created_on as timestamp),\n        day\n    ) as date) as change_request_created_date,\n        cast(sys_updated_on as timestamp) as change_request_updated_at,\n        cast (timestamp_trunc(\n        cast(sys_updated_on as timestamp),\n        day\n    ) as date) as change_request_updated_date,\n        _fivetran_deleted,\n        _fivetran_synced,\n        backout_plan,\n        cab_date,\n        cab_date_time,\n        cab_delegate_link,\n        cast(cab_delegate_value as string) as cab_delegate_value,\n        cab_recommendation,\n        cab_required as is_cab_required,\n        category as change_request_category,\n        change_plan,\n        chg_model_link,\n        cast(chg_model_value as string) as chg_model_value,\n        close_code as change_request_close_code,\n        conflict_last_run,\n        conflict_status,\n        end_date as change_request_end_date, -- sometimes the actual change and the change request timelines don't line up, so let's specify this is pertaining to the change request.\n        implementation_plan as change_request_implementation_plan,\n        justification as change_request_justification,\n        on_hold as is_change_request_on_hold,\n        on_hold_reason as change_request_on_hold_reason,\n        on_hold_task,\n        outside_maintenance_schedule,\n        cast(phase as string) as change_request_phase,\n        cast(phase_state as string) as change_request_phase_state,\n        production_system as is_production_system,\n        reason as change_request_reason,\n        requested_by_date as change_requested_by_date,\n        requested_by_link as change_requested_by_link,\n        cast(requested_by_value as string) as change_requested_by_value,\n        review_comments,\n        review_date as change_request_review_date,\n        review_status as change_request_review_status,\n        cast(risk as string) as change_request_risk,\n        cast(risk_impact_analysis as string) as risk_impact_analysis,\n        scope as change_request_scope,\n        start_date as change_request_start_date,\n        test_plan as change_request_test_plan,\n        cast(type as string) as change_request_type,\n        unauthorized as is_change_request_unauthorized\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.966468Z", "completed_at": "2024-08-29T17:59:25.310368Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.310750Z", "completed_at": "2024-08-29T17:59:25.310756Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3453531265258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    attributes\n    \n as \n    \n    attributes\n    \n, \n    \n    \n    business_unit_link\n    \n as \n    \n    business_unit_link\n    \n, \n    \n    \n    business_unit_value\n    \n as \n    \n    business_unit_value\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    cost\n    \n as \n    \n    cost\n    \n, \n    \n    \n    cost_cc\n    \n as \n    \n    cost_cc\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    managed_by_link\n    \n as \n    \n    managed_by_link\n    \n, \n    \n    \n    managed_by_value\n    \n as \n    \n    managed_by_value\n    \n, \n    \n    \n    manufacturer_link\n    \n as \n    \n    manufacturer_link\n    \n, \n    \n    \n    manufacturer_value\n    \n as \n    \n    manufacturer_value\n    \n, \n    \n    \n    model_id_link\n    \n as \n    \n    model_id_link\n    \n, \n    \n    \n    model_id_value\n    \n as \n    \n    model_id_value\n    \n, \n    \n    \n    model_number\n    \n as \n    \n    model_number\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    owned_by_link\n    \n as \n    \n    owned_by_link\n    \n, \n    \n    \n    owned_by_value\n    \n as \n    \n    owned_by_value\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_class_path\n    \n as \n    \n    sys_class_path\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    unverified\n    \n as \n    \n    unverified\n    \n, \n    \n    \n    vendor_link\n    \n as \n    \n    vendor_link\n    \n, \n    \n    \n    vendor_value\n    \n as \n    \n    vendor_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as cmdb_ci_id,\n        cast(sys_created_on as timestamp) as cmdb_ci_created_at,\n        cast(sys_updated_on as timestamp) as cmdb_ci_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        attributes,\n        business_unit_link,\n        cast(business_unit_value as string) as business_unit_value,\n        category,\n        company_link,\n        cast(company_value as string) as company_value,\n        cost,\n        cost_cc,\n        cost_center_link,\n        cast(cost_center_value as string) as cost_center_value,\n        managed_by_link,\n        cast(managed_by_value as string) as managed_by_value,\n        manufacturer_link,\n        cast(manufacturer_value as string) as manufacturer_value,\n        model_id_link,\n        cast(model_id_value as string) as model_id_value,\n        model_number,\n        name as cmdb_ci_name,\n        owned_by_link,\n        cast(owned_by_value as string) as owned_by_value,\n        subcategory,\n        sys_class_name,\n        sys_class_path,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as string) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        unverified,\n        vendor_link,\n        cast(vendor_value as string) as vendor_value\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:24.937336Z", "completed_at": "2024-08-29T17:59:25.333935Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.334323Z", "completed_at": "2024-08-29T17:59:25.334329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.39815402030944824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    change_request_link\n    \n as \n    \n    change_request_link\n    \n, \n    \n    \n    change_request_value\n    \n as \n    \n    change_request_value\n    \n, \n    \n    \n    change_task_type\n    \n as \n    \n    change_task_type\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    created_from\n    \n as \n    \n    created_from\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    planned_end_date\n    \n as \n    \n    planned_end_date\n    \n, \n    \n    \n    planned_start_date\n    \n as \n    \n    planned_start_date\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as change_task_id,\n        cast(sys_created_on as timestamp) as change_task_created_at,\n        cast(sys_updated_on as timestamp) as change_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        change_request_link,\n        cast(change_request_value as string) as change_request_value,\n        change_task_type,\n        close_code as change_task_close_code,\n        created_from as change_task_created_from,\n        on_hold as is_change_on_hold,\n        on_hold_reason as change_on_hold_reason,\n        planned_end_date as change_task_planned_end_date,\n        planned_start_date as change_task_planned_start_date\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.240696Z", "completed_at": "2024-08-29T17:59:25.626723Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.630271Z", "completed_at": "2024-08-29T17:59:25.630282Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.39132213592529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__core_company", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    customer\n    \n as \n    \n    customer\n    \n, \n    \n    \n    fax_phone\n    \n as \n    \n    fax_phone\n    \n, \n    \n    \n    fiscal_year\n    \n as \n    \n    fiscal_year\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    street\n    \n as \n    \n    street\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    \n    \n    vendor_type\n    \n as \n    \n    vendor_type\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as string) as core_company_id,\n        city as company_city,\n        country as company_country,\n        customer as is_customer,\n        fax_phone as company_fax_phone,\n        fiscal_year,\n        name as company_name,\n        notes,\n        phone as company_phone,\n        state as company_state,\n        street as company_street,\n        sys_class_name,\n        sys_created_by,\n        sys_created_on,\n        sys_mod_count,\n        sys_updated_by,\n        sys_updated_on,\n        vendor as is_vendor,\n        vendor_type,\n        website as company_website,\n        zip as company_zip\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.243000Z", "completed_at": "2024-08-29T17:59:25.630511Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.632323Z", "completed_at": "2024-08-29T17:59:25.632326Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.39326906204223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident", "compiled": true, "compiled_code": "with base as (\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident_base`\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_impact\n    \n as \n    \n    business_impact\n    \n, \n    \n    \n    business_stc\n    \n as \n    \n    business_stc\n    \n, \n    \n    \n    calendar_stc\n    \n as \n    \n    calendar_stc\n    \n, \n    \n    \n    caller_id_link\n    \n as \n    \n    caller_id_link\n    \n, \n    \n    \n    caller_id_value\n    \n as \n    \n    caller_id_value\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause\n    \n as \n    \n    cause\n    \n, \n    \n    \n    caused_by_link\n    \n as \n    \n    caused_by_link\n    \n, \n    \n    \n    caused_by_value\n    \n as \n    \n    caused_by_value\n    \n, \n    \n    \n    child_incidents\n    \n as \n    \n    child_incidents\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    hold_reason\n    \n as \n    \n    hold_reason\n    \n, \n    \n    \n    incident_state\n    \n as \n    \n    incident_state\n    \n, \n    \n    \n    notify\n    \n as \n    \n    notify\n    \n, \n    \n    \n    origin_id_link\n    \n as \n    \n    origin_id_link\n    \n, \n    \n    \n    origin_id_value\n    \n as \n    \n    origin_id_value\n    \n, \n    \n    \n    parent_incident_link\n    \n as \n    \n    parent_incident_link\n    \n, \n    \n    \n    parent_incident_value\n    \n as \n    \n    parent_incident_value\n    \n, \n    \n    \n    problem_id_link\n    \n as \n    \n    problem_id_link\n    \n, \n    \n    \n    problem_id_value\n    \n as \n    \n    problem_id_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    reopened_time\n    \n as \n    \n    reopened_time\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    severity\n    \n as \n    \n    severity\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    select \n        source_relation, \n        cast(sys_id as string) as incident_id,\n        cast(sys_created_on as timestamp) as incident_created_at,\n        cast(sys_updated_on as timestamp) as incident_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cast(business_impact as string) as business_impact,\n        business_stc,\n        calendar_stc,\n        caller_id_link,\n        cast(caller_id_value as string) as caller_id_value,\n        cast(category as string) as incident_category,\n        cast(cause as string) as incident_cause,\n        caused_by_link,\n        cast(caused_by_value as string) as caused_by_value,\n        child_incidents,\n        close_code,\n        hold_reason,\n        cast(incident_state as string) as incident_state,\n        notify,\n        origin_id_link,\n        cast(origin_id_value as string) as origin_id_value,\n        parent_incident_link,\n        cast(parent_incident_value as string) as parent_incident_value,\n        problem_id_link,\n        cast(problem_id_value as string) as problem_id_value,\n        reopen_count,\n        reopened_by_link,\n        cast(reopened_by_value as string) as reopened_by_value,\n        reopened_time as incident_reopened_time,\n        cast(resolved_at as timestamp) as incident_resolved_at,\n        resolved_by_link,\n        cast(resolved_by_value as string) as resolved_by_value,\n        rfc_link,\n        cast(rfc_value as string) as rfc_value,\n        cast(severity as string) as incident_severity,\n        cast(subcategory as string) as incident_subcategory\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.335626Z", "completed_at": "2024-08-29T17:59:25.630715Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.632512Z", "completed_at": "2024-08-29T17:59:25.632515Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.29861974716186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem", "compiled": true, "compiled_code": "with base as (\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_base`\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause_notes\n    \n as \n    \n    cause_notes\n    \n, \n    \n    \n    confirmed_at\n    \n as \n    \n    confirmed_at\n    \n, \n    \n    \n    confirmed_by_link\n    \n as \n    \n    confirmed_by_link\n    \n, \n    \n    \n    confirmed_by_value\n    \n as \n    \n    confirmed_by_value\n    \n, \n    \n    \n    duplicate_of_link\n    \n as \n    \n    duplicate_of_link\n    \n, \n    \n    \n    duplicate_of_value\n    \n as \n    \n    duplicate_of_value\n    \n, \n    \n    \n    first_reported_by_task_link\n    \n as \n    \n    first_reported_by_task_link\n    \n, \n    \n    \n    first_reported_by_task_value\n    \n as \n    \n    first_reported_by_task_value\n    \n, \n    \n    \n    fix_at\n    \n as \n    \n    fix_at\n    \n, \n    \n    \n    fix_by_link\n    \n as \n    \n    fix_by_link\n    \n, \n    \n    \n    fix_by_value\n    \n as \n    \n    fix_by_value\n    \n, \n    \n    \n    fix_communicated_at\n    \n as \n    \n    fix_communicated_at\n    \n, \n    \n    \n    fix_communicated_by_link\n    \n as \n    \n    fix_communicated_by_link\n    \n, \n    \n    \n    fix_communicated_by_value\n    \n as \n    \n    fix_communicated_by_value\n    \n, \n    \n    \n    fix_notes\n    \n as \n    \n    fix_notes\n    \n, \n    \n    \n    known_error\n    \n as \n    \n    known_error\n    \n, \n    \n    \n    major_problem\n    \n as \n    \n    major_problem\n    \n, \n    \n    \n    problem_state\n    \n as \n    \n    problem_state\n    \n, \n    \n    \n    related_incidents\n    \n as \n    \n    related_incidents\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    resolution_code\n    \n as \n    \n    resolution_code\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    review_outcome\n    \n as \n    \n    review_outcome\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    workaround\n    \n as \n    \n    workaround\n    \n, \n    \n    \n    workaround_applied\n    \n as \n    \n    workaround_applied\n    \n, \n    \n    \n    workaround_communicated_at\n    \n as \n    \n    workaround_communicated_at\n    \n, \n    \n    \n    workaround_communicated_by_link\n    \n as \n    \n    workaround_communicated_by_link\n    \n, \n    \n    \n    workaround_communicated_by_value\n    \n as \n    \n    workaround_communicated_by_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    select \n        source_relation,\n        cast(sys_id as string) as problem_id,\n        cast(sys_created_on as timestamp) as problem_created_at,\n        cast(sys_updated_on as timestamp) as problem_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cast(category as string) as problem_category,\n        cause_notes,\n        cast(confirmed_at as timestamp) as problem_confirmed_at,\n        confirmed_by_link as problem_confirmed_by_link,\n        cast(confirmed_by_value as string) as problem_confirmed_by_value,\n        duplicate_of_link,\n        cast(duplicate_of_value as string) as duplicate_of_value,\n        first_reported_by_task_link as problem_first_reported_by_task_link,\n        first_reported_by_task_value as problem_first_reported_by_task_value,\n        cast(fix_at as timestamp) as problem_fix_at,\n        fix_by_link as problem_fix_by_link,\n        cast(fix_by_value as string) as problem_fix_by_value,\n        cast(fix_communicated_at as timestamp) as fix_communicated_at,\n        fix_communicated_by_link,\n        cast(fix_communicated_by_value as string) as fix_communicated_by_value,\n        fix_notes as problem_fix_notes,\n        known_error as is_known_error,\n        major_problem as is_major_problem,\n        cast(problem_state as string) as problem_state,\n        related_incidents as problem_related_incidents,\n        reopen_count,\n        cast(reopened_at as timestamp) as reopened_at,\n        reopened_by_link,\n        cast(reopened_by_value as string) as reopened_by_value,\n        cast(resolution_code as string) as problem_resolution_code,\n        cast(resolved_at as timestamp) as problem_resolved_at,\n        resolved_by_link,\n        cast(resolved_by_value as string) as problem_resolved_by_value,\n        review_outcome,\n        rfc_link,\n        cast(rfc_value as string) as rfc_value,\n        cast(subcategory as string) as problem_subcategory,\n        workaround,\n        workaround_applied,\n        cast(workaround_communicated_at as timestamp) as workaround_communicated_at,\n        workaround_communicated_by_link,\n        cast(workaround_communicated_by_value as string) as workaround_communicated_by_value \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.312424Z", "completed_at": "2024-08-29T17:59:25.631319Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:25.633013Z", "completed_at": "2024-08-29T17:59:25.633016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.32250189781188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cause_code\n    \n as \n    \n    cause_code\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    other_reason\n    \n as \n    \n    other_reason\n    \n, \n    \n    \n    problem_link\n    \n as \n    \n    problem_link\n    \n, \n    \n    \n    problem_task_type\n    \n as \n    \n    problem_task_type\n    \n, \n    \n    \n    problem_value\n    \n as \n    \n    problem_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    started_at\n    \n as \n    \n    started_at\n    \n, \n    \n    \n    started_by_link\n    \n as \n    \n    started_by_link\n    \n, \n    \n    \n    started_by_value\n    \n as \n    \n    started_by_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    vendor_link\n    \n as \n    \n    vendor_link\n    \n, \n    \n    \n    vendor_value\n    \n as \n    \n    vendor_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as problem_task_id,\n        cast(sys_created_on as timestamp) as problem_task_created_at,\n        cast(sys_updated_on as timestamp) as problem_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cause_code as problem_task_cause_code,\n        close_code as problem_task_close_code,\n        other_reason,\n        problem_link,\n        problem_task_type,\n        cast(problem_value as string) as problem_value,\n        reopen_count,\n        reopened_at,\n        reopened_by_link,\n        cast(reopened_by_value as string) as reopened_by_value,\n        started_at as problem_task_started_at,\n        started_by_link,\n        cast(started_by_value as string) as started_by_value,\n        vendor_link,\n        cast(vendor_value as string) as vendor_value \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.645985Z", "completed_at": "2024-08-29T17:59:26.070774Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.072268Z", "completed_at": "2024-08-29T17:59:26.072274Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4342830181121826, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    default_assignee_link\n    \n as \n    \n    default_assignee_link\n    \n, \n    \n    \n    default_assignee_value\n    \n as \n    \n    default_assignee_value\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    exclude_manager\n    \n as \n    \n    exclude_manager\n    \n, \n    \n    \n    include_members\n    \n as \n    \n    include_members\n    \n, \n    \n    \n    manager_link\n    \n as \n    \n    manager_link\n    \n, \n    \n    \n    manager_value\n    \n as \n    \n    manager_value\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    parent_link\n    \n as \n    \n    parent_link\n    \n, \n    \n    \n    parent_value\n    \n as \n    \n    parent_value\n    \n, \n    \n    \n    roles\n    \n as \n    \n    roles\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        source_relation, \n        cast(sys_id as string) as sys_user_group_id,\n        cast(sys_created_on as timestamp) as sys_user_group_created_at,\n        cast(sys_updated_on as timestamp) as sys_user_group_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_active,\n        cost_center_link,\n        cast(cost_center_value as string) as cost_center_value,\n        default_assignee_link,\n        cast(default_assignee_value as string) as default_assignee_value,\n        description as sys_user_group_description,\n        email as sys_user_group_email,\n        exclude_manager,\n        include_members,\n        manager_link,\n        cast(manager_value as string) as manager_value,\n        name as sys_user_group_name,\n        parent_link,\n        cast(parent_value as string) as parent_value,\n        roles as sys_user_group_roles,\n        source,\n        sys_created_by,\n        sys_mod_count,\n        sys_updated_by,\n        type\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.639993Z", "completed_at": "2024-08-29T17:59:26.071033Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.072449Z", "completed_at": "2024-08-29T17:59:26.072452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.43584609031677246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accumulated_roles\n    \n as \n    \n    accumulated_roles\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    avatar\n    \n as \n    \n    avatar\n    \n, \n    \n    \n    building_link\n    \n as \n    \n    building_link\n    \n, \n    \n    \n    building_value\n    \n as \n    \n    building_value\n    \n, \n    \n    \n    calendar_integration\n    \n as \n    \n    calendar_integration\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_format\n    \n as \n    \n    date_format\n    \n, \n    \n    \n    default_perspective_link\n    \n as \n    \n    default_perspective_link\n    \n, \n    \n    \n    default_perspective_value\n    \n as \n    \n    default_perspective_value\n    \n, \n    \n    \n    department_link\n    \n as \n    \n    department_link\n    \n, \n    \n    \n    department_value\n    \n as \n    \n    department_value\n    \n, \n    \n    \n    edu_status\n    \n as \n    \n    edu_status\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    employee_number\n    \n as \n    \n    employee_number\n    \n, \n    \n    \n    enable_multifactor_authn\n    \n as \n    \n    enable_multifactor_authn\n    \n, \n    \n    \n    failed_attempts\n    \n as \n    \n    failed_attempts\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    gender\n    \n as \n    \n    gender\n    \n, \n    \n    \n    hashed_user_id\n    \n as \n    \n    hashed_user_id\n    \n, \n    \n    \n    home_phone\n    \n as \n    \n    home_phone\n    \n, \n    \n    \n    internal_integration_user\n    \n as \n    \n    internal_integration_user\n    \n, \n    \n    \n    introduction\n    \n as \n    \n    introduction\n    \n, \n    \n    \n    last_login\n    \n as \n    \n    last_login\n    \n, \n    \n    \n    last_login_device\n    \n as \n    \n    last_login_device\n    \n, \n    \n    \n    last_login_time\n    \n as \n    \n    last_login_time\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_password\n    \n as \n    \n    last_password\n    \n, \n    \n    \n    ldap_server_link\n    \n as \n    \n    ldap_server_link\n    \n, \n    \n    \n    ldap_server_value\n    \n as \n    \n    ldap_server_value\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    locked_out\n    \n as \n    \n    locked_out\n    \n, \n    \n    \n    manager_link\n    \n as \n    \n    manager_link\n    \n, \n    \n    \n    manager_value\n    \n as \n    \n    manager_value\n    \n, \n    \n    \n    middle_name\n    \n as \n    \n    middle_name\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notification\n    \n as \n    \n    notification\n    \n, \n    \n    \n    password_needs_reset\n    \n as \n    \n    password_needs_reset\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    photo\n    \n as \n    \n    photo\n    \n, \n    \n    \n    preferred_language\n    \n as \n    \n    preferred_language\n    \n, \n    \n    \n    roles\n    \n as \n    \n    roles\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    time_format\n    \n as \n    \n    time_format\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    user_name\n    \n as \n    \n    user_name\n    \n, \n    \n    \n    user_password\n    \n as \n    \n    user_password\n    \n, \n    \n    \n    vip\n    \n as \n    \n    vip\n    \n, \n    \n    \n    web_service_access_only\n    \n as \n    \n    web_service_access_only\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as string) as sys_user_id,\n        cast(sys_created_on as timestamp) as user_created_at,\n        sys_created_by,\n        cast(sys_updated_on as timestamp) as user_updated_at,\n        sys_updated_by,\n        _fivetran_deleted,\n        _fivetran_synced,\n        accumulated_roles,\n        active as is_active,\n        avatar,\n        building_link,\n        cast(building_value as string) as building_value,\n        calendar_integration,\n        city,\n        company_link,\n        cast(company_value as string) as company_value,\n        cost_center_link,\n        cast(cost_center_value as string) as cost_center_value,\n        country,\n        date_format,\n        default_perspective_link,\n        cast(default_perspective_value as string) as default_perspective_value,\n        department_link,\n        cast(department_value as string) as department_value,\n        edu_status,\n        email,\n        employee_number,\n        enable_multifactor_authn,\n        failed_attempts,\n        first_name,\n        gender,\n        hashed_user_id,\n        home_phone,\n        internal_integration_user,\n        introduction,\n        cast (timestamp_trunc(\n        cast(last_login as timestamp),\n        day\n    ) as date)  as last_login_day_date,\n        last_login_device,\n        last_login_time as last_login_at,\n        last_name,\n        last_password,\n        ldap_server_link,\n        cast(ldap_server_value as string) as ldap_server_value,\n        location_link,\n        cast(location_value as string) as location_value,\n        locked_out,\n        manager_link,\n        cast(manager_value as string) as manager_value,\n        middle_name,\n        mobile_phone,\n        name as sys_user_name,\n        notification,\n        password_needs_reset,\n        phone,\n        photo,\n        preferred_language,\n        roles as sys_user_roles,\n        schedule_link,\n        cast(schedule_value as string) as schedule_value,\n        source,\n        state,\n        sys_class_name,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as string) as sys_domain_value,\n        sys_mod_count,\n        time_format,\n        time_zone,\n        title,\n        user_name,\n        user_password,\n        vip,\n        web_service_access_only,\n        zip\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.643503Z", "completed_at": "2024-08-29T17:59:26.071276Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.072626Z", "completed_at": "2024-08-29T17:59:26.072629Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4358479976654053, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_grmember", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    group_link\n    \n as \n    \n    group_link\n    \n, \n    \n    \n    group_value\n    \n as \n    \n    group_value\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    user_link\n    \n as \n    \n    user_link\n    \n, \n    \n    \n    user_value\n    \n as \n    \n    user_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as sys_user_grmember_id,\n        cast(sys_created_on as timestamp) as sys_user_grmember_created_at,\n        cast(sys_updated_on as timestamp) as sys_user_grmember_updated_at,\n        sys_created_by,\n        sys_updated_by,\n        _fivetran_deleted,\n        _fivetran_synced,\n        group_link,\n        cast(group_value as string) as sys_user_group_id,\n        sys_mod_count,\n        user_link,\n        cast(user_value as string) as sys_user_id\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:25.634919Z", "completed_at": "2024-08-29T17:59:26.071458Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.072796Z", "completed_at": "2024-08-29T17:59:26.072799Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.44150233268737793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_choice", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    dependent_value\n    \n as \n    \n    dependent_value\n    \n, \n    \n    \n    element\n    \n as \n    \n    element\n    \n, \n    \n    \n    hint\n    \n as \n    \n    hint\n    \n, \n    \n    \n    inactive\n    \n as \n    \n    inactive\n    \n, \n    \n    \n    label\n    \n as \n    \n    label\n    \n, \n    \n    \n    language\n    \n as \n    \n    language\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    sequence\n    \n as \n    \n    sequence\n    \n, \n    \n    \n    synonyms\n    \n as \n    \n    synonyms\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as string) as sys_choice_id,\n        cast(sys_created_on as timestamp) as sys_choice_created_at,\n        sys_created_by,\n        cast(sys_updated_on as timestamp) as sys_choice_updated_at,\n        sys_updated_by,\n        _fivetran_deleted,\n        _fivetran_synced,\n        dependent_value,\n        element,\n        hint,\n        inactive,\n        label,\n        language,\n        name as sys_choice_name,\n        sequence,\n        synonyms,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as string) as sys_domain_value,\n        sys_mod_count,\n        value as sys_choice_value\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.080229Z", "completed_at": "2024-08-29T17:59:26.425425Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.426203Z", "completed_at": "2024-08-29T17:59:26.426213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.35103487968444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_role", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    assignable_by_link\n    \n as \n    \n    assignable_by_link\n    \n, \n    \n    \n    assignable_by_value\n    \n as \n    \n    assignable_by_value\n    \n, \n    \n    \n    can_delegate\n    \n as \n    \n    can_delegate\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    elevated_privilege\n    \n as \n    \n    elevated_privilege\n    \n, \n    \n    \n    grantable\n    \n as \n    \n    grantable\n    \n, \n    \n    \n    includes_roles\n    \n as \n    \n    includes_roles\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    requires_subscription\n    \n as \n    \n    requires_subscription\n    \n, \n    \n    \n    scoped_admin\n    \n as \n    \n    scoped_admin\n    \n, \n    \n    \n    suffix\n    \n as \n    \n    suffix\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as sys_user_role_id,\n        name as sys_user_role_name,\n        description as sys_user_role_description,\n        cast(sys_created_on as timestamp) as sys_user_role_created_at,\n        cast(sys_updated_on as timestamp) as sys_user_role_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        assignable_by_link,\n        assignable_by_value,\n        can_delegate,\n        elevated_privilege as is_elevated_privilege,\n        grantable as is_grantable,\n        includes_roles,\n        requires_subscription,\n        scoped_admin,\n        suffix\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.429126Z", "completed_at": "2024-08-29T17:59:26.504074Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.505534Z", "completed_at": "2024-08-29T17:59:26.505542Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07848000526428223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__cmdb_ci_service_cmdb_ci_service_id__source_relation.e596372710", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        cmdb_ci_service_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service`\n    group by cmdb_ci_service_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.077342Z", "completed_at": "2024-08-29T17:59:26.504355Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.505900Z", "completed_at": "2024-08-29T17:59:26.505903Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4312870502471924, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_has_role", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    granted_by_link\n    \n as \n    \n    granted_by_link\n    \n, \n    \n    \n    granted_by_value\n    \n as \n    \n    granted_by_value\n    \n, \n    \n    \n    included_in_role_instance_link\n    \n as \n    \n    included_in_role_instance_link\n    \n, \n    \n    \n    included_in_role_instance_value\n    \n as \n    \n    included_in_role_instance_value\n    \n, \n    \n    \n    included_in_role_link\n    \n as \n    \n    included_in_role_link\n    \n, \n    \n    \n    included_in_role_value\n    \n as \n    \n    included_in_role_value\n    \n, \n    \n    \n    inh_count\n    \n as \n    \n    inh_count\n    \n, \n    \n    \n    inh_map\n    \n as \n    \n    inh_map\n    \n, \n    \n    \n    inherited\n    \n as \n    \n    inherited\n    \n, \n    \n    \n    role_link\n    \n as \n    \n    role_link\n    \n, \n    \n    \n    role_value\n    \n as \n    \n    role_value\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    user_link\n    \n as \n    \n    user_link\n    \n, \n    \n    \n    user_value\n    \n as \n    \n    user_value\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as sys_user_has_role_id,\n        cast(sys_created_on as timestamp) as sys_user_has_role_created_at,\n        sys_created_by,\n        cast(sys_updated_on as timestamp) as sys_user_has_role_updated_at,\n        sys_updated_by,\n        user_link,\n        cast(user_value as string) as sys_user_id, \n        role_link,\n        cast(role_value as string) as sys_user_role_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        granted_by_link,\n        granted_by_value,\n        included_in_role_instance_link,\n        included_in_role_instance_value,\n        included_in_role_link,\n        included_in_role_value,\n        inh_count,\n        inh_map,\n        inherited,\n        state as sys_user_has_role_state,\n        sys_mod_count\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.087393Z", "completed_at": "2024-08-29T17:59:26.504901Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.506620Z", "completed_at": "2024-08-29T17:59:26.506623Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.43123412132263184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_sla_base`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_pause_duration\n    \n as \n    \n    business_pause_duration\n    \n, \n    \n    \n    business_percentage\n    \n as \n    \n    business_percentage\n    \n, \n    \n    \n    business_time_left\n    \n as \n    \n    business_time_left\n    \n, \n    \n    \n    duration\n    \n as \n    \n    duration\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    has_breached\n    \n as \n    \n    has_breached\n    \n, \n    \n    \n    original_breach_time\n    \n as \n    \n    original_breach_time\n    \n, \n    \n    \n    pause_duration\n    \n as \n    \n    pause_duration\n    \n, \n    \n    \n    pause_time\n    \n as \n    \n    pause_time\n    \n, \n    \n    \n    percentage\n    \n as \n    \n    percentage\n    \n, \n    \n    \n    planned_end_time\n    \n as \n    \n    planned_end_time\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    sla_link\n    \n as \n    \n    sla_link\n    \n, \n    \n    \n    sla_value\n    \n as \n    \n    sla_value\n    \n, \n    \n    \n    stage\n    \n as \n    \n    stage\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_link\n    \n as \n    \n    task_link\n    \n, \n    \n    \n    task_value\n    \n as \n    \n    task_value\n    \n, \n    \n    \n    time_left\n    \n as \n    \n    time_left\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as string) as task_sla_id,\n        cast(sys_created_on as timestamp) as task_sla_created_at,\n        cast(sys_updated_on as timestamp) as task_sla_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active,\n        business_duration,\n        business_pause_duration,\n        business_percentage,\n        business_time_left,\n        duration,\n        end_time,\n        has_breached,\n        original_breach_time,\n        pause_duration,\n        pause_time,\n        percentage,\n        planned_end_time,\n        schedule_link,\n        cast(schedule_value as string) as schedule_value,\n        sla_link,\n        cast(sla_value as string) as sla_value,\n        stage,\n        start_time,\n        sys_created_by,\n        sys_mod_count,\n        sys_updated_by,\n        task_link,\n        cast(task_value as string) as task_value,\n        time_left,\n        timezone\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_sla`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.082317Z", "completed_at": "2024-08-29T17:59:26.505319Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.507097Z", "completed_at": "2024-08-29T17:59:26.507099Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4321329593658447, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task", "compiled": true, "compiled_code": "with base as (\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_base`\n),\n\nfields as (\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    activity_due\n    \n as \n    \n    activity_due\n    \n, \n    \n    \n    additional_assignee_list\n    \n as \n    \n    additional_assignee_list\n    \n, \n    \n    \n    approval\n    \n as \n    \n    approval\n    \n, \n    \n    \n    approval_history\n    \n as \n    \n    approval_history\n    \n, \n    \n    \n    approval_set\n    \n as \n    \n    approval_set\n    \n, \n    \n    \n    assigned_to_link\n    \n as \n    \n    assigned_to_link\n    \n, \n    \n    \n    assigned_to_value\n    \n as \n    \n    assigned_to_value\n    \n, \n    \n    \n    assignment_group_link\n    \n as \n    \n    assignment_group_link\n    \n, \n    \n    \n    assignment_group_value\n    \n as \n    \n    assignment_group_value\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_service_link\n    \n as \n    \n    business_service_link\n    \n, \n    \n    \n    business_service_value\n    \n as \n    \n    business_service_value\n    \n, \n    \n    \n    calendar_duration\n    \n as \n    \n    calendar_duration\n    \n, \n    \n    \n    close_notes\n    \n as \n    \n    close_notes\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    closed_by_link\n    \n as \n    \n    closed_by_link\n    \n, \n    \n    \n    closed_by_value\n    \n as \n    \n    closed_by_value\n    \n, \n    \n    \n    cmdb_ci_link\n    \n as \n    \n    cmdb_ci_link\n    \n, \n    \n    \n    cmdb_ci_value\n    \n as \n    \n    cmdb_ci_value\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    comments_and_work_notes\n    \n as \n    \n    comments_and_work_notes\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    contact_type\n    \n as \n    \n    contact_type\n    \n, \n    \n    \n    contract_link\n    \n as \n    \n    contract_link\n    \n, \n    \n    \n    contract_value\n    \n as \n    \n    contract_value\n    \n, \n    \n    \n    correlation_display\n    \n as \n    \n    correlation_display\n    \n, \n    \n    \n    correlation_id\n    \n as \n    \n    correlation_id\n    \n, \n    \n    \n    delivery_plan_link\n    \n as \n    \n    delivery_plan_link\n    \n, \n    \n    \n    delivery_plan_value\n    \n as \n    \n    delivery_plan_value\n    \n, \n    \n    \n    delivery_task_link\n    \n as \n    \n    delivery_task_link\n    \n, \n    \n    \n    delivery_task_value\n    \n as \n    \n    delivery_task_value\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    escalation\n    \n as \n    \n    escalation\n    \n, \n    \n    \n    expected_start\n    \n as \n    \n    expected_start\n    \n, \n    \n    \n    follow_up\n    \n as \n    \n    follow_up\n    \n, \n    \n    \n    group_list\n    \n as \n    \n    group_list\n    \n, \n    \n    \n    impact\n    \n as \n    \n    impact\n    \n, \n    \n    \n    knowledge\n    \n as \n    \n    knowledge\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    made_sla\n    \n as \n    \n    made_sla\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    opened_at\n    \n as \n    \n    opened_at\n    \n, \n    \n    \n    opened_by_link\n    \n as \n    \n    opened_by_link\n    \n, \n    \n    \n    opened_by_value\n    \n as \n    \n    opened_by_value\n    \n, \n    \n    \n        \n            \n            `order`\n            \n        \n    \n as task_order , \n    \n    \n    parent_link\n    \n as \n    \n    parent_link\n    \n, \n    \n    \n    parent_value\n    \n as \n    \n    parent_value\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    reassignment_count\n    \n as \n    \n    reassignment_count\n    \n, \n    \n    \n    rejection_goto_link\n    \n as \n    \n    rejection_goto_link\n    \n, \n    \n    \n    rejection_goto_value\n    \n as \n    \n    rejection_goto_value\n    \n, \n    \n    \n    route_reason\n    \n as \n    \n    route_reason\n    \n, \n    \n    \n    service_offering_link\n    \n as \n    \n    service_offering_link\n    \n, \n    \n    \n    service_offering_value\n    \n as \n    \n    service_offering_value\n    \n, \n    \n    \n    short_description\n    \n as \n    \n    short_description\n    \n, \n    \n    \n    sla_due\n    \n as \n    \n    sla_due\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_effective_number\n    \n as \n    \n    task_effective_number\n    \n, \n    \n    \n    universal_request_link\n    \n as \n    \n    universal_request_link\n    \n, \n    \n    \n    universal_request_value\n    \n as \n    \n    universal_request_value\n    \n, \n    \n    \n    upon_approval\n    \n as \n    \n    upon_approval\n    \n, \n    \n    \n    upon_reject\n    \n as \n    \n    upon_reject\n    \n, \n    \n    \n    urgency\n    \n as \n    \n    urgency\n    \n, \n    \n    \n    watch_list\n    \n as \n    \n    watch_list\n    \n, \n    \n    \n    wf_activity_link\n    \n as \n    \n    wf_activity_link\n    \n, \n    \n    \n    wf_activity_value\n    \n as \n    \n    wf_activity_value\n    \n, \n    \n    \n    work_end\n    \n as \n    \n    work_end\n    \n, \n    \n    \n    work_notes\n    \n as \n    \n    work_notes\n    \n, \n    \n    \n    work_notes_list\n    \n as \n    \n    work_notes_list\n    \n, \n    \n    \n    work_start\n    \n as \n    \n    work_start\n    \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    select \n        source_relation,\n        cast(sys_id as string) as task_id,\n        cast(sys_created_on as timestamp) as task_created_at,\n        cast(sys_updated_on as timestamp) as task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cast(active as boolean) as is_task_active,\n        activity_due,\n        additional_assignee_list,\n        approval,\n        approval_history,\n        approval_set,\n        assigned_to_link,\n        cast(assigned_to_value as string) as assigned_to_value,\n        assignment_group_link,\n        cast(assignment_group_value as string) as assignment_group_value,\n        business_duration,\n        business_service_link,\n        cast(business_service_value as string) as business_service_value,\n        calendar_duration,\n        close_notes,\n        cast(closed_at as timestamp) as task_closed_at,\n        closed_by_link,\n        cast(closed_by_value as string) as closed_by_value,\n        cmdb_ci_link,\n        cast(cmdb_ci_value as string) as cmdb_ci_value,\n        comments,\n        comments_and_work_notes,\n        company_link,\n        cast(company_value as string) as company_value,\n        contact_type,\n        contract_link,\n        cast(contract_value as string) as contract_value,\n        correlation_display,\n        correlation_id,\n        delivery_plan_link,\n        cast(delivery_plan_value as string) as delivery_plan_value,\n        delivery_task_link,\n        cast(delivery_task_value as string) as delivery_task_value,\n        description as task_description,\n        cast (timestamp_trunc(\n        cast(due_date as timestamp),\n        day\n    ) as date) as task_due_date_at,\n        escalation,\n        expected_start,\n        follow_up as task_follow_up_at,\n        group_list,\n        cast(impact as string) as impact,\n        knowledge,\n        location_link,\n        cast(location_value as string) as location_value,\n        cast(made_sla as boolean) as is_made_sla,\n        number as task_number,\n        cast(opened_at as timestamp) as task_opened_at,\n        opened_by_link,\n        cast(opened_by_value as string) as opened_by_value,\n        task_order, -- Renamed within the get_task_columns() macro.\n        parent_link,\n        cast(parent_value as string) as parent_value,\n        cast(priority as string) as priority,\n        reassignment_count,\n        rejection_goto_link,\n        cast(rejection_goto_value as string) as rejection_goto_value,\n        route_reason,\n        service_offering_link,\n        cast(service_offering_value as string) as service_offering_value,\n        short_description,\n        sla_due,\n        cast(state as string) as task_state,\n        sys_class_name,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as string) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        task_effective_number,\n        universal_request_link,\n        cast(universal_request_value as string) as universal_request_value,\n        upon_approval,\n        upon_reject,\n        cast(urgency as string) as urgency,\n        watch_list,\n        wf_activity_link,\n        cast(wf_activity_value as string) as wf_activity_value,\n        work_end,\n        work_notes,\n        work_notes_list,\n        work_start\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.510640Z", "completed_at": "2024-08-29T17:59:26.521691Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.522874Z", "completed_at": "2024-08-29T17:59:26.522880Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015112876892089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__cmdb_ci_service_cmdb_ci_service_id.f7770250de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cmdb_ci_service_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service`\nwhere cmdb_ci_service_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.515335Z", "completed_at": "2024-08-29T17:59:26.522003Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.523053Z", "completed_at": "2024-08-29T17:59:26.523056Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014889955520629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__change_request_change_request_id__source_relation.f8d65569ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        change_request_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request`\n    group by change_request_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.517775Z", "completed_at": "2024-08-29T17:59:26.522537Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.524183Z", "completed_at": "2024-08-29T17:59:26.524186Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015230178833007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_request_change_request_id.0f2ee81c5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_request_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request`\nwhere change_request_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.519788Z", "completed_at": "2024-08-29T17:59:26.522716Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.524356Z", "completed_at": "2024-08-29T17:59:26.524359Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015128135681152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__cmdb_ci_cmdb_ci_id__source_relation.4d25f1839d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        cmdb_ci_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci`\n    group by cmdb_ci_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.527466Z", "completed_at": "2024-08-29T17:59:26.537191Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.538346Z", "completed_at": "2024-08-29T17:59:26.538350Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01349496841430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__cmdb_ci_cmdb_ci_id.83f2c6d37c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cmdb_ci_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci`\nwhere cmdb_ci_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.529222Z", "completed_at": "2024-08-29T17:59:26.537400Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.538527Z", "completed_at": "2024-08-29T17:59:26.538530Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013516902923583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__change_task_change_task_id__source_relation.11bf5182ff", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        change_task_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task`\n    group by change_task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.532262Z", "completed_at": "2024-08-29T17:59:26.537970Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.539660Z", "completed_at": "2024-08-29T17:59:26.539663Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013620138168334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_task_change_task_id.2d5ae34a7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_task_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task`\nwhere change_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.534831Z", "completed_at": "2024-08-29T17:59:26.538171Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.539841Z", "completed_at": "2024-08-29T17:59:26.539845Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__core_company_core_company_id__source_relation.85b30d325b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        core_company_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company`\n    group by core_company_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.542854Z", "completed_at": "2024-08-29T17:59:26.553312Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.554480Z", "completed_at": "2024-08-29T17:59:26.554488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014239072799682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__core_company_core_company_id.e8ef462897", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect core_company_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company`\nwhere core_company_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.546200Z", "completed_at": "2024-08-29T17:59:26.553582Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.554799Z", "completed_at": "2024-08-29T17:59:26.554803Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014478921890258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__incident_incident_id__source_relation.4383616e6a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        incident_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident`\n    group by incident_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.548770Z", "completed_at": "2024-08-29T17:59:26.553924Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.555533Z", "completed_at": "2024-08-29T17:59:26.555536Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014274120330810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__incident_incident_id.b01cee4a78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect incident_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident`\nwhere incident_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.551083Z", "completed_at": "2024-08-29T17:59:26.554303Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.556048Z", "completed_at": "2024-08-29T17:59:26.556051Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014519214630126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__problem_problem_id__source_relation.135d98438b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        problem_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem`\n    group by problem_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.559301Z", "completed_at": "2024-08-29T17:59:26.567809Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.568778Z", "completed_at": "2024-08-29T17:59:26.568783Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012253284454345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_problem_id.2b0f45ffad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem`\nwhere problem_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.561557Z", "completed_at": "2024-08-29T17:59:26.568029Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.569260Z", "completed_at": "2024-08-29T17:59:26.569263Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012398004531860352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__problem_task_problem_task_id__source_relation.e59f50cae6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        problem_task_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task`\n    group by problem_task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.563883Z", "completed_at": "2024-08-29T17:59:26.568432Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.569971Z", "completed_at": "2024-08-29T17:59:26.569974Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012459993362426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_task_problem_task_id.2d07d24f54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_task_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task`\nwhere problem_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.565702Z", "completed_at": "2024-08-29T17:59:26.568940Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.570695Z", "completed_at": "2024-08-29T17:59:26.570698Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012820243835449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_group_sys_user_group_id__source_relation.6fd66f39ed", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_group_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group`\n    group by sys_user_group_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.573284Z", "completed_at": "2024-08-29T17:59:26.582534Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.583891Z", "completed_at": "2024-08-29T17:59:26.583896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013287067413330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_group_sys_user_group_id.a4600fb5c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_group_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group`\nwhere sys_user_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.575635Z", "completed_at": "2024-08-29T17:59:26.582823Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.584230Z", "completed_at": "2024-08-29T17:59:26.584233Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013061761856079102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_sys_user_id__source_relation.040d637571", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n    group by sys_user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.578927Z", "completed_at": "2024-08-29T17:59:26.583289Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.584964Z", "completed_at": "2024-08-29T17:59:26.584967Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013186216354370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_sys_user_id.99385b5bcb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\nwhere sys_user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.580523Z", "completed_at": "2024-08-29T17:59:26.583697Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.585502Z", "completed_at": "2024-08-29T17:59:26.585506Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011390924453735352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_grmember_sys_user_grmember_id__source_relation.38800293d6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_grmember_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember`\n    group by sys_user_grmember_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.588804Z", "completed_at": "2024-08-29T17:59:26.603318Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.604086Z", "completed_at": "2024-08-29T17:59:26.604091Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018239974975585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_grmember_sys_user_grmember_id.137c7e7cfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_grmember_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember`\nwhere sys_user_grmember_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.591594Z", "completed_at": "2024-08-29T17:59:26.603846Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.605287Z", "completed_at": "2024-08-29T17:59:26.605290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018871784210205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__change_request_enhanced", "compiled": true, "compiled_code": "with change_request as (\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request`\n),\n\nchange_task as (\n    select\n        change_request_value,\n        source_relation,\n        count(change_task_id) as total_tasks\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task`\n    group by 1,2\n),\n\nsys_user as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\nsys_choice as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\n    where sys_choice_name = 'change_request'\n),\n\nchange_request_enhanced as (\n    select\n        change_request.change_request_id,\n        change_request.change_request_category,\n        change_request.change_request_type,\n        type_choice.label as dv_change_request_type_label,\n        change_request.change_request_created_at,\n        change_request.change_request_created_date,\n        change_request.change_request_updated_at,\n        change_request.change_request_updated_date,\n        change_request.change_request_start_date,\n        change_request.change_requested_by_date,\n        change_request.change_requested_by_link,\n        change_request.change_requested_by_value,\n        change_requestor.email as change_requestor_email,\n        change_requestor.manager_value as change_requestor_manager_value,\n        change_requestor.department_value as change_requestor_department_value,\n        change_requestor.sys_user_name as change_requestor_name,\n        change_requestor.sys_user_roles as change_requestor_roles,\n        change_request.change_request_review_date,\n        change_request.change_request_review_status,\n        change_request.review_comments,\n        change_request.change_plan,\n        change_request.backout_plan,\n        change_request.chg_model_link,\n        change_request.chg_model_value,\n        change_request.change_request_close_code,\n        change_request.conflict_last_run,\n        change_request.conflict_status,\n        change_request.change_request_phase,\n        change_request.change_request_phase_state,\n        phase_state_choice.label as dv_change_request_phase_state_label,\n        change_request.change_request_implementation_plan,\n        change_request.change_request_justification,\n        change_request.is_change_request_on_hold,\n        change_request.change_request_on_hold_reason,\n        change_request.on_hold_task,\n        change_request.outside_maintenance_schedule,\n        change_request.is_production_system,\n        change_request.change_request_reason,\n        change_request.change_request_risk,\n        risk_choice.label as dv_change_request_risk_label,\n        change_request.risk_impact_analysis,\n        change_request.change_request_scope,\n        change_request.change_request_test_plan,\n        change_request.is_change_request_unauthorized,\n        change_request.cab_date,\n        change_request.cab_date_time,\n        change_request.cab_delegate_link,\n        change_request.cab_delegate_value,\n        change_request.cab_recommendation,\n        change_request.is_cab_required,\n        change_request._fivetran_synced,\n        \n\n    datetime_diff(\n        cast(cast(change_request.change_request_start_date as timestamp )  as datetime),\n        cast(cast(change_request.change_request_created_date as timestamp )  as datetime),\n        day\n    )\n\n   as change_request_days_created_to_start,\n        \n\n    datetime_diff(\n        cast(cast(change_request.change_request_start_date as timestamp )  as datetime),\n        cast(cast(change_request.change_requested_by_date as timestamp )  as datetime),\n        day\n    )\n\n   as change_request_days_requested_by_to_start, \n        \n\n    datetime_diff(\n        cast(cast(change_request.change_request_review_date as timestamp )  as datetime),\n        cast(cast(change_request.change_request_created_date as timestamp )  as datetime),\n        day\n    )\n\n   as change_request_days_created_to_reviewed,\n        change_task.total_tasks as total_related_tasks,\n        change_request.source_relation\n\n    from change_request\n    left join change_task\n        on change_request.change_request_id = change_task.change_request_value\n        and change_request.source_relation = change_task.source_relation\n    left join sys_user change_requestor\n        on change_request.change_requested_by_value = change_requestor.sys_user_id\n        and change_request.source_relation = change_requestor.source_relation\n    left join sys_choice type_choice\n        on change_request.change_request_type = type_choice.sys_choice_value\n        and type_choice.element = 'type'\n        and change_request.source_relation = type_choice.source_relation\n    left join sys_choice phase_state_choice\n        on change_request.change_request_phase_state = phase_state_choice.sys_choice_value\n        and phase_state_choice.element = 'phase_state'\n        and change_request.change_request_phase = phase_state_choice.dependent_value\n        and change_request.source_relation = phase_state_choice.source_relation\n    left join sys_choice risk_choice\n        on change_request.change_request_risk = risk_choice.sys_choice_value\n        and risk_choice.element = 'risk'\n        and change_request.source_relation = risk_choice.source_relation\n)\n\nselect *\nfrom change_request_enhanced", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__change_request_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.600021Z", "completed_at": "2024-08-29T17:59:26.604479Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.606391Z", "completed_at": "2024-08-29T17:59:26.606394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018962860107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__problem_enhanced", "compiled": true, "compiled_code": "with problem as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem`\n),\n\nproblem_task as (\n    select\n        problem_value,\n        source_relation,\n        count(problem_task_id) as total_tasks\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task`\n    group by 1,2\n),\n\nsys_user as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\nsys_choice as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\n    where sys_choice_name = 'problem'\n),\n\nproblem_enhanced as (\n    select\n        problem.problem_id,\n        problem.problem_subcategory,\n        problem.problem_category,\n        problem.problem_state,\n        state_choice.label as dv_problem_state_label,\n        problem.problem_created_at,\n        problem.problem_updated_at,\n        problem.problem_confirmed_at,\n        problem.problem_confirmed_by_link,\n        problem.problem_confirmed_by_value,\n        problem_confirmer.email as problem_confirmer_email,\n        problem_confirmer.manager_value as problem_confirmer_manager_value,\n        problem_confirmer.department_value as problem_confirmer_department_value,\n        problem_confirmer.sys_user_name as problem_confirmer_name,\n        problem_confirmer.sys_user_roles as problem_confirmer_roles,\n        problem.problem_fix_at,\n        problem.problem_fix_by_link,\n        problem.problem_fix_by_value,\n        problem_fixer.email as problem_fixer_email,\n        problem_fixer.manager_value as problem_fixer_manager_value,\n        problem_fixer.department_value as problem_fixer_department_value,\n        problem_fixer.sys_user_name as problem_fixer_name,\n        problem_fixer.sys_user_roles as problem_fixer_roles,\n        problem.problem_resolution_code,\n        problem.problem_resolved_at,\n        problem.resolved_by_link,\n        problem.problem_resolved_by_value,\n        problem_resolver.email as problem_resolver_email,\n        problem_resolver.manager_value as problem_resolver_manager_value,\n        problem_resolver.department_value as problem_resolver_department_value,\n        problem_resolver.sys_user_name as problem_resolver_name,\n        problem_resolver.sys_user_roles as problem_resolver_roles,\n        problem.problem_first_reported_by_task_link,\n        problem.problem_first_reported_by_task_value,\n        problem.fix_communicated_at,\n        problem.fix_communicated_by_link,\n        problem.fix_communicated_by_value,\n        problem_fix_communicator.email as problem_fix_communicator_email,\n        problem_fix_communicator.manager_value as problem_fix_communicator_manager_value,\n        problem_fix_communicator.department_value as problem_fix_communicator_department_value,\n        problem_fix_communicator.sys_user_name as problem_fix_communicator_name,\n        problem_fix_communicator.sys_user_roles as problem_fix_communicator_roles,\n        problem.reopen_count,\n        problem.reopened_at,\n        problem.reopened_by_link,\n        problem.reopened_by_value,\n        problem_reopener.email as problem_reopener_email,\n        problem_reopener.manager_value as problem_reopener_manager_value,\n        problem_reopener.department_value as problem_reopener_department_value,\n        problem_reopener.sys_user_name as problem_reopener_name,\n        problem_reopener.sys_user_roles as problem_reopener_roles,\n        problem.cause_notes,\n        problem.duplicate_of_link,\n        problem.duplicate_of_value,\n        problem.problem_fix_notes,\n        problem.is_known_error,\n        problem.is_major_problem,\n        problem.problem_related_incidents,\n        problem.review_outcome,\n        problem.rfc_link,\n        problem.rfc_value,\n        problem.workaround,\n        problem.workaround_applied,\n        problem.workaround_communicated_at,\n        problem.workaround_communicated_by_link,\n        problem.workaround_communicated_by_value,\n        problem_workaround_communicator.email as problem_workaround_communicator_email,\n        problem_workaround_communicator.manager_value as problem_workaround_communicator_manager_value,\n        problem_workaround_communicator.department_value as problem_workaround_communicator_department_value,\n        problem_workaround_communicator.sys_user_name as problem_workaround_communicator_name,\n        problem_workaround_communicator.sys_user_roles as problem_workaround_communicator_roles,\n        \n\n    datetime_diff(\n        cast(cast(problem.problem_fix_at as timestamp )  as datetime),\n        cast(cast(problem.problem_created_at as timestamp )  as datetime),\n        minute\n    )\n\n   as problem_minutes_created_to_fix,\n        \n\n    datetime_diff(\n        cast(cast(problem.problem_resolved_at as timestamp )  as datetime),\n        cast(cast(problem.problem_created_at as timestamp )  as datetime),\n        minute\n    )\n\n   as problem_minutes_created_to_resolved,\n        problem._fivetran_synced,\n        problem_task.total_tasks as total_related_tasks,\n        problem.source_relation\n    from problem\n    left join problem_task\n        on problem.problem_id = problem_task.problem_value\n        and problem.source_relation = problem_task.source_relation\n    left join sys_user problem_confirmer\n        on problem.problem_confirmed_by_value = problem_confirmer.sys_user_id\n        and problem.source_relation = problem_confirmer.source_relation\n    left join sys_user problem_fixer\n        on problem.problem_fix_by_value = problem_fixer.sys_user_id\n        and problem.source_relation = problem_fixer.source_relation\n    left join sys_user problem_resolver\n        on problem.problem_resolved_by_value = problem_resolver.sys_user_id\n        and problem.source_relation = problem_resolver.source_relation\n    left join sys_user problem_fix_communicator\n        on problem.fix_communicated_by_value = problem_fix_communicator.sys_user_id\n        and problem.source_relation = problem_fix_communicator.source_relation\n    left join sys_user problem_reopener\n        on problem.reopened_by_value = problem_reopener.sys_user_id\n        and problem.source_relation = problem_reopener.source_relation\n    left join sys_user problem_workaround_communicator\n        on problem.workaround_communicated_by_value = problem_workaround_communicator.sys_user_id\n        and problem.source_relation = problem_workaround_communicator.source_relation\n    left join sys_choice state_choice\n        on problem.problem_state = state_choice.sys_choice_value\n        and state_choice.element = 'state'\n        and problem.source_relation = state_choice.source_relation\n)\n\nselect *\nfrom problem_enhanced", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__problem_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.597194Z", "completed_at": "2024-08-29T17:59:26.604690Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.606575Z", "completed_at": "2024-08-29T17:59:26.606578Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019861936569213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__incident_enhanced", "compiled": true, "compiled_code": "with incident as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__incident`\n),\n\nsys_user as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\nsys_choice as (\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\n    where sys_choice_name = 'incident'\n),\n\nincident_enhanced as (\n    select\n        incident.incident_id,\n        incident.incident_category,\n        category_choice.label as dv_incident_category_label,\n        incident.incident_subcategory,\n        subcategory_choice.label as dv_incident_subcategory_label,\n        incident.incident_severity,\n        severity_choice.label as dv_incident_severity_label,\n        incident.incident_state,\n        state_choice.label as dv_incident_state_label,\n        incident.incident_created_at,\n        incident.incident_updated_at,\n        incident.reopened_by_link,\n        incident.reopened_by_value,\n        reopener.email as reopener_email,\n        reopener.manager_value as reopener_manager_value,\n        reopener.department_value as reopener_department_value,\n        reopener.sys_user_name as reopener_name,\n        reopener.sys_user_roles as reopener_roles,\n        incident.incident_reopened_time,\n        incident.incident_resolved_at,\n        incident.resolved_by_link,\n        incident.resolved_by_value,\n        resolver.email as resolver_email,\n        resolver.manager_value as resolver_manager_value,\n        resolver.department_value as resolver_department_value,\n        resolver.sys_user_name as resolver_name,\n        resolver.sys_user_roles as resolver_roles,\n        incident.business_impact,\n        business_impact_choice.label as dv_business_impact_label,\n        incident.business_stc,\n        incident.calendar_stc,\n        incident.caller_id_link,\n        incident.caller_id_value,\n        caller_info.email as caller_email,\n        caller_info.manager_value as caller_manager_value,\n        caller_info.department_value as caller_department_value,\n        caller_info.sys_user_name as caller_name,\n        caller_info.sys_user_roles as caller_roles,\n        incident.incident_cause,\n        incident.caused_by_link,\n        incident.caused_by_value,\n        coalesce(incident.child_incidents,0) as child_incidents,\n        incident.close_code,\n        incident.hold_reason,\n        incident.notify,\n        incident.origin_id_link,\n        incident.origin_id_value,\n        incident.parent_incident_link,\n        incident.parent_incident_value,\n        incident.problem_id_link,\n        incident.problem_id_value,\n        incident.reopen_count,\n        incident.rfc_link,\n        incident.rfc_value,\n        \n\n    datetime_diff(\n        cast(cast(incident_resolved_at as timestamp )  as datetime),\n        cast(cast(incident_created_at as timestamp )  as datetime),\n        minute\n    )\n\n   as incident_minutes_created_to_resolved,\n        incident._fivetran_synced,\n        incident.source_relation\n    from incident\n    left join sys_user reopener\n        on incident.reopened_by_value = reopener.sys_user_id\n        and incident.source_relation = reopener.source_relation\n    left join sys_user resolver\n        on incident.resolved_by_value = resolver.sys_user_id\n        and incident.source_relation = resolver.source_relation\n    left join sys_user caller_info\n        on incident.caller_id_value = caller_info.sys_user_id\n        and incident.source_relation = caller_info.source_relation\n    left join sys_choice category_choice\n        on incident.incident_category = category_choice.sys_choice_value\n        and category_choice.element = 'category'\n        and incident.source_relation = category_choice.source_relation\n    left join sys_choice subcategory_choice\n        on incident.incident_subcategory = subcategory_choice.sys_choice_value\n        and subcategory_choice.element = 'subcategory'\n        and incident.incident_category = subcategory_choice.dependent_value \n        and incident.source_relation = subcategory_choice.source_relation\n    left join sys_choice state_choice\n        on incident.incident_state = state_choice.sys_choice_value\n        and state_choice.element = 'state'\n        and incident.source_relation = state_choice.source_relation\n    left join sys_choice business_impact_choice\n        on incident.business_impact = business_impact_choice.sys_choice_value\n        and business_impact_choice.element = 'business_impact'\n        and incident.source_relation = business_impact_choice.source_relation\n    left join sys_choice severity_choice\n        on incident.incident_severity = severity_choice.sys_choice_value\n        and severity_choice.element = 'severity'\n        and incident.source_relation = severity_choice.source_relation\n)\n\nselect *\nfrom incident_enhanced", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__incident_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.608926Z", "completed_at": "2024-08-29T17:59:26.615996Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.620889Z", "completed_at": "2024-08-29T17:59:26.620895Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014712095260620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_choice_sys_choice_id__source_relation.8134b8c34b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_choice_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\n    group by sys_choice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.613522Z", "completed_at": "2024-08-29T17:59:26.620590Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.622117Z", "completed_at": "2024-08-29T17:59:26.622120Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014830827713012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_choice_sys_choice_id.863b7b743f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_choice_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\nwhere sys_choice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.618502Z", "completed_at": "2024-08-29T17:59:26.621728Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.623571Z", "completed_at": "2024-08-29T17:59:26.623575Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011401891708374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_role_sys_user_role_id.7a1587bcfd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_role_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role`\nwhere sys_user_role_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.616252Z", "completed_at": "2024-08-29T17:59:26.621925Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.623787Z", "completed_at": "2024-08-29T17:59:26.623790Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012140989303588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_role_sys_user_role_id__source_relation.7f807d9e69", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_role_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role`\n    group by sys_user_role_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.625625Z", "completed_at": "2024-08-29T17:59:26.636492Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.641141Z", "completed_at": "2024-08-29T17:59:26.641148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018667936325073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__user_aggregated", "compiled": true, "compiled_code": "\n\nwith sys_user as (\n    \n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\nuser_grmember as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_grmember`\n),\n\nuser_has_role as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role`\n),\n\nuser_role as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_role`\n),\n\nuser_group as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group`\n),\n\naggregate_counts as (\n\n    select \n        sys_user.sys_user_id,\n        sys_user.source_relation,\n        count(distinct case when user_grmember.sys_user_group_id is not null and user_grmember.sys_user_group_id != '' then user_grmember.sys_user_group_id else null end) as count_distinct_sys_user_group_ids,\n        count(distinct case when user_has_role.sys_user_role_id is not null and user_has_role.sys_user_role_id != '' then user_has_role.sys_user_role_id else null end) as count_distinct_sys_user_role_ids,\n        count(distinct case when user_role.sys_user_role_name is not null and user_role.sys_user_role_name != '' then user_role.sys_user_role_name else null end) as count_distinct_sys_user_role_names,\n        count(distinct case when user_role.includes_roles is not null and user_role.includes_roles != '' then user_role.includes_roles else null end) as count_distinct_included_roles,\n        count(distinct case when user_group.sys_user_group_roles is not null and user_group.sys_user_group_roles != '' then user_group.sys_user_group_roles else null end) as count_distinct_sys_user_group_roles\n\n    from sys_user\n    left join user_grmember\n        on sys_user.sys_user_id = user_grmember.sys_user_id\n        and sys_user.source_relation = user_grmember.source_relation\n    left join user_group\n        on user_grmember.sys_user_group_id = user_group.sys_user_group_id\n        and user_grmember.source_relation = user_group.source_relation\n    left join user_has_role\n        on sys_user.sys_user_id = user_has_role.sys_user_id\n        and sys_user.source_relation = user_has_role.source_relation\n    left join user_role\n        on user_has_role.sys_user_role_id = user_role.sys_user_role_id\n        and user_has_role.source_relation = user_role.source_relation\n\n    group by 1,2\n),\n\nuser_aggregates as (\n\n    select\n        sys_user.sys_user_id,\n        sys_user.source_relation,\n        count_distinct_sys_user_group_ids,\n        case when\n            aggregate_counts.count_distinct_sys_user_group_ids <= 5000 then \n    string_agg(distinct user_grmember.sys_user_group_id, '\\n')\n\n\n            else 'Too many sys user group ids to render' \n        end as sys_user_group_ids,\n        count_distinct_sys_user_role_ids,\n        case when\n            aggregate_counts.count_distinct_sys_user_role_ids <= 5000 then \n    string_agg(distinct user_has_role.sys_user_role_id, '\\n')\n\n\n            else 'Too many sys user role ids to render' \n        end as sys_user_role_ids,\n        count_distinct_sys_user_role_names,\n        case when\n            aggregate_counts.count_distinct_sys_user_role_names <= 5000 then \n    string_agg(distinct user_role.sys_user_role_name, '\\n')\n\n\n            else 'Too many sys user role names to render' \n        end as sys_user_role_names,\n        count_distinct_included_roles,\n        case when\n            aggregate_counts.count_distinct_included_roles <= 5000 then \n    string_agg(distinct user_role.includes_roles, '\\n')\n\n\n            else 'Too many roles to render' \n        end as included_roles,\n        count_distinct_sys_user_group_roles,\n        case when\n            aggregate_counts.count_distinct_sys_user_group_roles <= 5000 then \n    string_agg(distinct user_group.sys_user_group_roles, '\\n')\n\n\n            else 'Too many sys user group roles to render' \n        end as sys_user_group_roles\n\n    from sys_user\n    left join aggregate_counts\n        on sys_user.sys_user_id = aggregate_counts.sys_user_id\n        and sys_user.source_relation = aggregate_counts.source_relation\n    left join user_grmember\n        on sys_user.sys_user_id = user_grmember.sys_user_id\n        and sys_user.source_relation = user_grmember.source_relation\n    left join user_group\n        on user_grmember.sys_user_group_id = user_group.sys_user_group_id\n        and user_grmember.source_relation = user_group.source_relation\n    left join user_has_role\n        on sys_user.sys_user_id = user_has_role.sys_user_id\n        and sys_user.source_relation = user_has_role.source_relation\n    left join user_role\n        on user_has_role.sys_user_role_id = user_role.sys_user_role_id\n        and user_has_role.source_relation = user_role.source_relation\n\n    group by sys_user.sys_user_id, sys_user.source_relation, count_distinct_sys_user_group_ids, count_distinct_sys_user_role_ids, count_distinct_sys_user_role_names, count_distinct_included_roles, count_distinct_sys_user_group_roles\n)\n\nselect * \nfrom user_aggregates", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__user_aggregated`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.633151Z", "completed_at": "2024-08-29T17:59:26.640905Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.642333Z", "completed_at": "2024-08-29T17:59:26.642335Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017978668212890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_has_role_sys_user_has_role_id__source_relation.9010f1a7f8", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_has_role_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role`\n    group by sys_user_has_role_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.636923Z", "completed_at": "2024-08-29T17:59:26.641545Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.643481Z", "completed_at": "2024-08-29T17:59:26.643484Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012073040008544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_has_role_sys_user_has_role_id.c17ac67033", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_has_role_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_has_role`\nwhere sys_user_has_role_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.638931Z", "completed_at": "2024-08-29T17:59:26.642162Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.643964Z", "completed_at": "2024-08-29T17:59:26.643966Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01220703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__task_sla_task_sla_id__source_relation.e9939b7a70", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_sla_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_sla`\n    group by task_sla_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.645692Z", "completed_at": "2024-08-29T17:59:26.654281Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.658951Z", "completed_at": "2024-08-29T17:59:26.658956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016025066375732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_sla_task_sla_id.c67b0e6fdf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_sla_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task_sla`\nwhere task_sla_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.649796Z", "completed_at": "2024-08-29T17:59:26.658731Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.659939Z", "completed_at": "2024-08-29T17:59:26.659942Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015769004821777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__task_enhanced", "compiled": true, "compiled_code": "with task as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task`\n),\n\nproblem_task as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem_task`\n),\n\nproblem as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__problem`\n),\n\nchange_task as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_task`\n),\n\nchange_request as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__change_request`\n),\n\nsys_user as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\nsys_user_group as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user_group`\n),\n\ncore_company as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company`\n),\n\ncmdb_ci as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci`\n),\n\ncmdb_ci_service as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__cmdb_ci_service`\n),\n\nsys_choice as (\n  select *\n  from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_choice`\n  where sys_choice_name = 'task'\n),\n\ntask_enhanced as (\n  select \n    task.task_id,\n    task.is_task_active,\n    task.task_description,\n    task.activity_due,\n    task.priority,\n    priority_choice.label as dv_priority_label,\n    task.impact,\n    impact_choice.label as dv_impact_label,\n    task.urgency,\n    urgency_choice.label as dv_urgency_label,\n    task.task_state,\n    state_choice.label as dv_task_state_label,\n    task.task_number,\n    task.task_order,\n    cast( (case when problem_task.problem_task_id is not null \n      then true \n      else false \n    end) as boolean) as is_problem_task,\n    cast( (case when change_task.change_task_id is not null \n      then true \n      else false \n    end) as boolean) as is_change_task,\n    task.task_created_at,\n    task.sys_created_by,\n    task.cmdb_ci_link,\n    task.cmdb_ci_value,\n    cmdb_ci.cmdb_ci_name,\n    creator.email as creator_email,\n    creator.manager_value as creator_manager_value,\n    creator.department_value as creator_department_value,\n    creator.sys_user_name as creator_name,\n    creator.sys_user_roles as creator_roles,\n    task.task_updated_at,\n    cast (timestamp_trunc(\n        cast(task.task_updated_at as timestamp),\n        day\n    ) as date) as task_updated_date,\n    task.sys_updated_by,\n    updater.email as updater_email,\n    updater.manager_value as updater_manager_value,\n    updater.department_value as updater_department_value,\n    updater.sys_user_name as updater_name,\n    updater.sys_user_roles as updater_roles,\n    task.task_opened_at,\n    task.opened_by_link,\n    task.opened_by_value, \n    opener.manager_value as opener_manager_value,\n    opener.email as opener_email,\n    opener.department_value as opener_department_value,\n    opener.sys_user_name as opener_name,\n    opener.sys_user_roles as opener_roles,\n    task.assigned_to_link, \n    task.assigned_to_value,\n    assignee.email as assignee_email,\n    assignee.manager_value as assignee_manager_value,\n    assignee.department_value as assignee_department_value,\n    assignee.sys_user_name as assignee_name,\n    assignee.sys_user_roles as assignee_roles,\n    task.task_closed_at,\n    \n\n    datetime_diff(\n        cast(cast(task.task_closed_at as timestamp )  as datetime),\n        cast(cast(task.task_opened_at as timestamp )  as datetime),\n        minute\n    )\n\n   as task_minutes_open_to_close,\n    task.closed_by_link,\n    task.closed_by_value,\n    closer.email as closer_email,\n    closer.manager_value as closer_manager_value,\n    closer.department_value as closer_department_value,\n    closer.sys_user_name as closer_name,\n    closer.sys_user_roles as closer_roles,\n    task.task_effective_number,\n    task.additional_assignee_list,\n    task.approval,\n    task.approval_history,\n    task.approval_set,\n    task.assignment_group_link,\n    task.assignment_group_value,\n    assignment_group.sys_user_group_name as assignment_group_name,\n    task.business_duration,\n    task.calendar_duration,\n    task.business_service_link,\n    task.business_service_value,\n    business_service.cmdb_ci_service_name as business_service_name,\n    task.close_notes,\n    task.comments,\n    task.comments_and_work_notes,\n    task.company_link,\n    task.company_value, \n    core_company.company_name,\n    task.contact_type, \n    task.task_due_date_at,\n    task.expected_start,\n    task.task_follow_up_at,\n    task.group_list,\n    task.knowledge,\n    task.is_made_sla,\n    task.sla_due,\n    task.parent_link, \n    task.parent_value,\n    task.reassignment_count,\n    task.route_reason,\n    task.short_description,\n    task.sys_class_name,\n    task.sys_domain_link,\n    task.sys_domain_path,\n    task.sys_domain_value,\n    task.upon_approval,\n    task.upon_reject,\n    task.watch_list,\n    task.work_start,\n    task.work_end,\n    task.work_notes,\n    task.work_notes_list,\n    problem_task.problem_task_cause_code,\n    problem_task.problem_task_close_code,\n    problem_task.problem_task_type,\n    problem_task.problem_task_started_at,\n    problem_task.started_by_value,\n    problem_task_starter.email as problem_task_starter_email,\n    problem_task_starter.manager_value as problem_task_starter_manager_value,\n    problem_task_starter.department_value as problem_task_starter_department_value,\n    problem_task_starter.sys_user_name as problem_task_starter_name,\n    problem_task_starter.sys_user_roles as problem_task_starter_roles, \n    problem.problem_id as associated_problem_id,\n    problem.problem_category,\n    problem.cause_notes,\n    problem.problem_confirmed_at,\n    problem.problem_confirmed_by_value,\n    problem_confirmer.email as problem_confirmer_email,\n    problem_confirmer.manager_value as problem_confirmer_manager_value,\n    problem_confirmer.department_value as problem_confirmer_department_value,\n    problem_confirmer.sys_user_name as problem_confirmer_name,\n    problem_confirmer.sys_user_roles as problem_confirmer_roles,\n    problem.problem_first_reported_by_task_link,\n    problem.problem_first_reported_by_task_value,\n    problem.problem_fix_at,\n    problem.problem_fix_by_value,\n    problem_fixer.email as problem_fixer_email,\n    problem_fixer.manager_value as problem_fixer_manager_value,\n    problem_fixer.department_value as problem_fixer_department_value,\n    problem_fixer.sys_user_name as problem_fixer_name,\n    problem_fixer.sys_user_roles as problem_fixer_roles,\n    problem.problem_fix_notes,\n    problem.is_known_error as problem_is_known_error,\n    problem.is_major_problem,\n    problem.problem_state,\n    problem.problem_related_incidents,\n    problem.problem_resolution_code,\n    problem.problem_resolved_at,\n    problem.problem_resolved_by_value,\n    problem.workaround_applied,\n    problem_resolver.email as problem_resolver_email,\n    problem_resolver.manager_value as problem_resolver_manager_value,\n    problem_resolver.department_value as problem_resolver_department_value,\n    problem_resolver.sys_user_name as problem_resolver_name,\n    problem_resolver.sys_user_roles as problem_resolver_roles,\n    problem.problem_subcategory,\n    problem.problem_created_at,\n    problem.problem_updated_at,\n    change_task.change_task_type,\n    change_task.change_task_close_code,\n    change_task.change_task_created_from,\n    change_task.is_change_on_hold,\n    change_task.change_on_hold_reason,\n    change_task.change_task_planned_end_date,\n    change_task.change_task_planned_start_date,\n    change_request.change_request_id as associated_change_request_id,\n    change_request.change_request_created_at,\n    change_request.change_request_updated_at,\n    change_request.change_request_category,\n    change_request.change_plan,\n    change_request.change_request_close_code,\n    change_request.change_request_end_date,\n    change_request.change_request_implementation_plan,\n    change_request.change_request_justification,\n    change_request.is_change_request_on_hold,\n    change_request.change_request_on_hold_reason,\n    change_request.change_request_phase,\n    change_request.change_request_phase_state,\n    change_request.change_request_reason,\n    change_request.change_requested_by_date,\n    change_request.change_requested_by_value,\n    change_requester.email as change_requester_email,\n    change_requester.manager_value as change_requester_manager_value,\n    change_requester.department_value as change_requester_department_value,\n    change_requester.sys_user_name as change_requester_name,\n    change_requester.sys_user_roles as change_requester_roles,\n    change_request.change_request_review_date,\n    change_request.change_request_review_status,\n    change_request.change_request_risk,\n    change_request.change_request_scope,\n    change_request.change_request_start_date,\n    change_request.change_request_test_plan,\n    change_request.change_request_type,\n    change_request.is_change_request_unauthorized,\n    task.source_relation\n\nfrom task\nleft join core_company\n  on task.company_value = core_company.core_company_id\n  and task.source_relation = core_company.source_relation\nleft join problem_task\n  on task.task_id = problem_task.problem_task_id\n  and task.source_relation = problem_task.source_relation\nleft join sys_user problem_task_starter\n  on problem_task.started_by_value = problem_task_starter.sys_user_id\n  and problem_task.source_relation = problem_task_starter.source_relation\nleft join problem\n  on problem_task.problem_value = problem.problem_id\n  and problem_task.source_relation = problem.source_relation\nleft join sys_user problem_confirmer\n  on problem.problem_confirmed_by_value = problem_confirmer.sys_user_id\n  and problem.source_relation = problem_confirmer.source_relation\nleft join sys_user problem_fixer\n  on problem.problem_fix_by_value = problem_fixer.sys_user_id\n  and problem.source_relation = problem_fixer.source_relation\nleft join sys_user problem_resolver\n  on problem.problem_resolved_by_value = problem_resolver.sys_user_id\n  and problem.source_relation = problem_resolver.source_relation\nleft join change_task\n  on task.task_id = change_task.change_task_id\n  and task.source_relation = change_task.source_relation\nleft join change_request\n  on change_task.change_request_value = change_request.change_request_id\n  and change_task.source_relation = change_request.source_relation\nleft join sys_user change_requester\n  on change_request.change_requested_by_value = change_requester.sys_user_id\n  and change_request.source_relation = change_requester.source_relation\nleft join sys_user assignee\n  on task.assigned_to_value = assignee.sys_user_id\n  and task.source_relation = assignee.source_relation\nleft join sys_user closer \n  on task.closed_by_value = closer.sys_user_id\n  and task.source_relation = closer.source_relation\nleft join sys_user opener\n  on task.opened_by_value = opener.sys_user_id\n  and task.source_relation = opener.source_relation\nleft join sys_user creator\n  on task.sys_created_by = creator.sys_user_id\n  and task.source_relation = creator.source_relation\nleft join sys_user updater\n  on task.sys_updated_by = updater.sys_user_id\n  and task.source_relation = updater.source_relation\nleft join sys_user_group assignment_group\n  on task.assignment_group_value = assignment_group.sys_user_group_id\n  and task.source_relation = assignment_group.source_relation\nleft join cmdb_ci\n  on task.cmdb_ci_value = cmdb_ci.cmdb_ci_id\n  and task.source_relation = cmdb_ci.source_relation\nleft join cmdb_ci_service business_service\n  on task.business_service_value = business_service.cmdb_ci_service_id\n  and task.source_relation = business_service.source_relation\nleft join sys_choice state_choice\n  on task.task_state = state_choice.sys_choice_value\n  and state_choice.element = 'state'\n  and task.source_relation = state_choice.source_relation\nleft join sys_choice priority_choice\n  on task.priority = priority_choice.sys_choice_value\n  and priority_choice.element = 'priority'\n  and task.source_relation = priority_choice.source_relation\nleft join sys_choice impact_choice\n  on task.impact = impact_choice.sys_choice_value\n  and impact_choice.element = 'impact'\n  and task.source_relation = impact_choice.source_relation\nleft join sys_choice urgency_choice\n  on task.urgency = urgency_choice.sys_choice_value\n  and urgency_choice.element = 'urgency'\n  and task.source_relation = urgency_choice.source_relation\n)\n\nselect *\nfrom task_enhanced", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__task_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.654724Z", "completed_at": "2024-08-29T17:59:26.659333Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.661425Z", "completed_at": "2024-08-29T17:59:26.661429Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013475656509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__task_task_id__source_relation.4b5ec4b727", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task`\n    group by task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.656956Z", "completed_at": "2024-08-29T17:59:26.660117Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.662213Z", "completed_at": "2024-08-29T17:59:26.662216Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013989925384521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_task_id.7a50a91303", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__task`\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.663894Z", "completed_at": "2024-08-29T17:59:26.671689Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.674378Z", "completed_at": "2024-08-29T17:59:26.674384Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013586759567260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__change_request_enhanced_change_request_id__source_relation.69a5aa212b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        change_request_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__change_request_enhanced`\n    group by change_request_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.666721Z", "completed_at": "2024-08-29T17:59:26.673522Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.674731Z", "completed_at": "2024-08-29T17:59:26.674735Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012708187103271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__problem_enhanced_problem_id__source_relation.17d8bd3f7e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        problem_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__problem_enhanced`\n    group by problem_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.669365Z", "completed_at": "2024-08-29T17:59:26.674172Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.675948Z", "completed_at": "2024-08-29T17:59:26.675951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010419130325317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__incident_enhanced_incident_id__source_relation.210ca84c74", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        incident_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__incident_enhanced`\n    group by incident_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.671898Z", "completed_at": "2024-08-29T17:59:26.674562Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.676352Z", "completed_at": "2024-08-29T17:59:26.676354Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008705854415893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__user_enhanced", "compiled": true, "compiled_code": "\n\nwith user_aggregates as (\n\n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__user_aggregated`\n),\n\nsys_user as (\n    \n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__sys_user`\n),\n\ncore_company as (\n    \n    select *\n    from `dbt-package-testing`.`zz_dbt_renee_stg_servicenow`.`stg_servicenow__core_company`\n),\n\nuser_enhanced as (\n\n    select\n\n        user_aggregates.*,\n        sys_user.user_created_at,\n        sys_user.user_updated_at,\n        sys_user.accumulated_roles,\n        sys_user.first_name,\n        sys_user.last_name,\n        sys_user.sys_user_name,\n        sys_user.is_active,\n        sys_user.company_link,\n        sys_user.company_value,\n        core_company.company_name,\n        sys_user.cost_center_link,\n        sys_user.cost_center_value,\n        sys_user.department_link,\n        sys_user.department_value,\n        sys_user.email,\n        sys_user.employee_number,\n        sys_user.gender,\n        sys_user.hashed_user_id,\n        sys_user.last_password,\n        sys_user.ldap_server_link,\n        sys_user.ldap_server_value,\n        sys_user.manager_link,\n        sys_user.manager_value,\n        manager.sys_user_name as manager_name,\n        sys_user.mobile_phone,\n        sys_user.phone,\n        sys_user.sys_user_roles,\n        sys_user.schedule_link,\n        sys_user.schedule_value,\n        sys_user.source,\n        sys_user.state,\n        sys_user.sys_class_name,\n        sys_user.sys_domain_link,\n        sys_user.sys_domain_path,\n        sys_user.sys_domain_value,\n        sys_user.time_format,\n        sys_user.time_zone,\n        sys_user.user_name,\n        sys_user.user_password\n\n    from user_aggregates\n    left join sys_user\n        on user_aggregates.sys_user_id = sys_user.sys_user_id\n        and user_aggregates.source_relation = sys_user.source_relation\n    left join core_company \n        on sys_user.company_value = core_company.core_company_id\n        and sys_user.source_relation = core_company.source_relation\n    left join sys_user manager\n        on sys_user.manager_value = manager.sys_user_id\n        and sys_user.source_relation = manager.source_relation\n)\n\nselect *\nfrom user_enhanced", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__user_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.678809Z", "completed_at": "2024-08-29T17:59:26.685182Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.688434Z", "completed_at": "2024-08-29T17:59:26.688439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012271881103515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__user_aggregated_sys_user_id__source_relation.a19e988556", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__user_aggregated`\n    group by sys_user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.681939Z", "completed_at": "2024-08-29T17:59:26.687818Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.688961Z", "completed_at": "2024-08-29T17:59:26.688964Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01238703727722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__activity_summary", "compiled": true, "compiled_code": "with ticket_enhanced as (\n\n    select * \n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__task_enhanced`\n)\n\nselect \n    task_updated_date,\n    task_state,\n    priority,\n    impact,\n    urgency,\n    source_relation,\n    count(distinct case when is_task_active = true then task_id end) as total_active_tasks,\n    count(distinct case when is_problem_task = true and is_task_active = true then task_id end) as total_active_problem_tasks,\n    count(distinct case when is_change_task = true and is_task_active = true then task_id end) as total_active_change_tasks,\n    count(distinct associated_problem_id) as total_associated_problems, \n    sum(problem_related_incidents) as total_incidents_caused_by_problems,\n    count(distinct associated_change_request_id) as total_change_requests,\n    count(distinct case when task_closed_at is not null then task_id end) as total_closed_tasks,\n    avg(task_minutes_open_to_close) as average_minutes_open_to_close,\n    count(case when is_made_sla = true then 1 end) as total_tasks_made_slas\n\nfrom ticket_enhanced\ngroup by 1,2,3,4,5,6", "relation_name": "`dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__activity_summary`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.683635Z", "completed_at": "2024-08-29T17:59:26.688609Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.690362Z", "completed_at": "2024-08-29T17:59:26.690365Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012817859649658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_servicenow__task_enhanced_task_id.76cea62cda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__task_enhanced`\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.685401Z", "completed_at": "2024-08-29T17:59:26.688776Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.690540Z", "completed_at": "2024-08-29T17:59:26.690543Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010020971298217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_servicenow__task_enhanced_task_id.a974c4dbbc", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select task_id as unique_field\n  from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__task_enhanced`\n  where task_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.692560Z", "completed_at": "2024-08-29T17:59:26.697049Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.697737Z", "completed_at": "2024-08-29T17:59:26.697740Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007268190383911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__user_enhanced_sys_user_id__source_relation.115977e822", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_id, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__user_enhanced`\n    group by sys_user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-29T17:59:26.694313Z", "completed_at": "2024-08-29T17:59:26.697232Z"}, {"name": "execute", "started_at": "2024-08-29T17:59:26.697919Z", "completed_at": "2024-08-29T17:59:26.697921Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0066680908203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__activity_summary_task_updated_date__task_state__priority__impact__urgency__source_relation.8ca2665c4e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_updated_date, task_state, priority, impact, urgency, source_relation\n    from `dbt-package-testing`.`zz_dbt_renee_prod`.`servicenow__activity_summary`\n    group by task_updated_date, task_state, priority, impact, urgency, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 4.469517946243286, "args": {"macro_debugging": false, "log_format_file": "debug", "show_resource_report": false, "strict_mode": false, "enable_legacy_logger": false, "which": "generate", "populate_cache": true, "project_dir": "/Users/renee/Documents/dbt/servicenow/develop", "favor_state": false, "profiles_dir": "/Users/renee/.dbt", "static": false, "cache_selected_only": false, "vars": {}, "partial_parse_file_diff": true, "send_anonymous_usage_stats": true, "version_check": true, "printer_width": 80, "select": [], "log_path": "/Users/renee/Documents/dbt/servicenow/develop/logs", "exclude": [], "invocation_command": "dbt docs generate", "log_format": "default", "defer": false, "print": true, "use_colors": true, "use_colors_file": true, "introspect": true, "compile": true, "empty_catalog": false, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "static_parser": true, "write_json": true, "log_level": "info", "partial_parse": true, "indirect_selection": "eager", "log_file_max_bytes": 10485760}}